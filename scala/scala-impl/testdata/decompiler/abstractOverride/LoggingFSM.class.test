package akka.actor
trait LoggingFSM[S, D] extends scala.AnyRef with akka.actor.FSM[S, D] {
 this : akka.actor.LoggingFSM[S, D] with akka.actor.Actor =>
  def logDepth : scala.Int = { /* compiled code */ }
  private[akka] override val debugEvent : scala.Boolean = { /* compiled code */ }
  private[akka] abstract override def processEvent(event : LoggingFSM.super[FSM/*akka.actor.FSM*/].Event, source : scala.AnyRef) : scala.Unit = { /* compiled code */ }
  protected def getLog : scala.IndexedSeq[akka.actor.FSM.LogEntry[S, D]] = { /* compiled code */ }
}
